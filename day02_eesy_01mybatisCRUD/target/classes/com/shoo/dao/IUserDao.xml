<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shoo.dao.IUserDao">
    <!--  配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="com.shoo.domain.User">
        <!--主键字段的对应-->
        <id property="userId" column="id"></id>
        <!-- 非主键字段的对应 -->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>

    <select id="findAll" resultMap="userMap">
        <!--select * from user; -->
        <!-- 属性名和mysql数据库列名不一致时配置1： 别名
        select id as userId, username as userName ,address as userAddress,
        sex as userSex, birthday as userBirthday from user;-->
        <!-- 属性名和mysql数据库列名不一致时配置1： 配置 -->
        select * from user;

    </select>

    <!--查询所有操作
    <select id="findAll" resultType="com.shoo.domain.User">
        select * from user;
    // 属性名和mysql数据库列名不一致时配置1： 别名
    select id as userId, username as userName ,address as userAddress,
    sex as userSex, birthday as userBirthday from user;
     //属性名和mysql数据库列名不一致时配置1： 配置
        select * from user;

    </select>-->

<!-- 保存用户  添加用户 parameterType: 参数类型 -->
    <insert id="saveUser" parameterType="com.shoo.domain.User">
        <!-- 配置插入操作后，获取插入数据的id -->
        <selectKey keyProperty="userId" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username, address, sex, birthday) values(#{userName},#{userAddress},#{userSex},#{userBirthday});
    </insert>

    <!--更新用户-->
    <update id="updateUser" parameterType="com.shoo.domain.User">
        update user set username=#{userName},address=#{userAddress},sex=#{userSex},birthday=#{userBirthday} where id=#{userId}
    </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id=#{uid}
    </delete>

    <!--根据id查询用户-->
    <select id="findById" parameterType="INT" resultType="com.shoo.domain.User">
        select * from user where id =#{uid}
    </select>

    <!--根据名称模糊查询用户-->
    <select id="findByName" parameterType="string" resultType="com.shoo.domain.User">
    <!-- select * from user where username like #{name}; -->
        select * from user where username like '%${value}%'
    </select>

<!--获取用户的总记录条数-->
    <select id="findTotal" resultType="int">
        select count(id) from user ;
    </select>

    <!-- 根据queryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.shoo.domain.QueryVo" resultType="com.shoo.domain.User">
        select * from user where username like #{user.username}
    </select>
</mapper>